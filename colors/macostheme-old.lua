-- macOS Classic Light Theme for Neovim
-- Based on the Zed theme by huacnlee
-- Place this file in ~/.config/nvim/colors/macos-classic-light.lua

local M = {}

-- Reset highlighting
vim.cmd 'highlight clear'
if vim.fn.exists 'syntax_on' then
  vim.cmd 'syntax reset'
end

vim.o.termguicolors = true
vim.g.colors_name = 'macostheme'

-- Color palette
local colors = {
  -- Base colors
  bg = '#ffffff',
  bg_secondary = '#f9f9f9',
  bg_tertiary = '#f7f7f7',
  fg = '#000000',
  fg_secondary = '#333333',
  fg_tertiary = '#666666',

  -- UI colors
  border = '#d2d2d2',
  border_variant = '#e0e0e0',
  selection = '#c7deff',
  selection_inactive = '#e4e4e4',
  cursor_line = '#f5f5f5',

  -- Syntax colors (classic Mac style)
  blue = '#0000ff',
  blue_dark = '#000080',
  purple = '#9400d3',
  green = '#008000',
  green_dark = '#006400',
  red = '#dc143c',
  orange = '#ff4500',
  yellow = '#daa520',
  cyan = '#008b8b',
  magenta = '#8b008b',

  -- Special colors
  error = '#ff0000',
  warning = '#ff8c00',
  info = '#4169e1',
  hint = '#808080',

  -- Git colors
  git_add = '#22863a',
  git_change = '#e36209',
  git_delete = '#d73a49',
}

-- Highlight groups
local highlights = {
  -- Editor highlights
  Normal = { fg = colors.fg, bg = colors.bg },
  NormalFloat = { fg = colors.fg, bg = colors.bg_secondary },
  FloatBorder = { fg = colors.border },
  ColorColumn = { bg = colors.bg_tertiary },
  Conceal = { fg = colors.fg_tertiary },
  Cursor = { fg = colors.bg, bg = colors.fg },
  CursorIM = { fg = colors.bg, bg = colors.fg },
  CursorColumn = { bg = colors.cursor_line },
  CursorLine = { bg = colors.cursor_line },
  CursorLineNr = { fg = colors.fg_secondary, bold = true },
  LineNr = { fg = colors.fg_tertiary },
  Directory = { fg = colors.blue },
  DiffAdd = { bg = '#e6ffed' },
  DiffChange = { bg = '#fff5b1' },
  DiffDelete = { bg = '#ffeef0' },
  DiffText = { bg = '#ffd33d', bold = true },
  EndOfBuffer = { fg = colors.bg },
  ErrorMsg = { fg = colors.error },
  VertSplit = { fg = colors.border },
  WinSeparator = { fg = colors.border },
  Folded = { fg = colors.fg_secondary, bg = colors.bg_tertiary },
  FoldColumn = { fg = colors.fg_tertiary, bg = colors.bg },
  SignColumn = { fg = colors.fg_tertiary, bg = colors.bg },
  IncSearch = { fg = colors.bg, bg = colors.orange },
  Search = { bg = '#ffff00' },
  Substitute = { fg = colors.bg, bg = colors.red },
  MatchParen = { bg = colors.selection, bold = true },
  ModeMsg = { fg = colors.fg_secondary },
  MsgArea = { fg = colors.fg },
  MsgSeparator = { fg = colors.border },
  MoreMsg = { fg = colors.green },
  NonText = { fg = colors.fg_tertiary },
  Pmenu = { fg = colors.fg, bg = colors.bg_secondary },
  PmenuSel = { fg = colors.fg, bg = colors.selection },
  PmenuSbar = { bg = colors.bg_tertiary },
  PmenuThumb = { bg = colors.border },
  Question = { fg = colors.blue },
  QuickFixLine = { bg = colors.selection },
  SpecialKey = { fg = colors.fg_tertiary },
  SpellBad = { undercurl = true, sp = colors.error },
  SpellCap = { undercurl = true, sp = colors.warning },
  SpellLocal = { undercurl = true, sp = colors.info },
  SpellRare = { undercurl = true, sp = colors.hint },
  StatusLine = { fg = colors.fg_secondary, bg = colors.bg_tertiary },
  StatusLineNC = { fg = colors.fg_tertiary, bg = colors.bg_secondary },
  TabLine = { fg = colors.fg_tertiary, bg = colors.bg_secondary },
  TabLineFill = { bg = colors.bg_secondary },
  TabLineSel = { fg = colors.fg, bg = colors.bg, bold = true },
  Title = { fg = colors.blue, bold = true },
  Visual = { bg = colors.selection },
  VisualNOS = { bg = colors.selection_inactive },
  WarningMsg = { fg = colors.warning },
  Whitespace = { fg = colors.fg_tertiary },
  WildMenu = { fg = colors.fg, bg = colors.selection },

  -- Syntax highlights
  Comment = { fg = colors.green, italic = true },
  Constant = { fg = colors.red },
  String = { fg = colors.purple },
  Character = { fg = colors.purple },
  Number = { fg = colors.orange },
  Boolean = { fg = colors.blue_dark, bold = true },
  Float = { fg = colors.orange },
  Identifier = { fg = colors.fg },
  Function = { fg = colors.blue },
  Statement = { fg = colors.blue_dark, bold = true },
  Conditional = { fg = colors.blue_dark, bold = true },
  Repeat = { fg = colors.blue_dark, bold = true },
  Label = { fg = colors.blue_dark },
  Operator = { fg = colors.fg_secondary },
  Keyword = { fg = colors.blue_dark, bold = true },
  Exception = { fg = colors.blue_dark, bold = true },
  PreProc = { fg = colors.cyan },
  Include = { fg = colors.cyan },
  Define = { fg = colors.cyan },
  Macro = { fg = colors.cyan },
  PreCondit = { fg = colors.cyan },
  Type = { fg = colors.green_dark },
  StorageClass = { fg = colors.blue_dark },
  Structure = { fg = colors.green_dark },
  Typedef = { fg = colors.green_dark },
  Special = { fg = colors.magenta },
  SpecialChar = { fg = colors.magenta },
  Tag = { fg = colors.blue },
  Delimiter = { fg = colors.fg_secondary },
  SpecialComment = { fg = colors.green_dark, italic = true },
  Debug = { fg = colors.red },
  Underlined = { underline = true },
  Ignore = { fg = colors.fg_tertiary },
  Error = { fg = colors.error },
  Todo = { fg = colors.yellow, bold = true },

  -- LSP highlights
  LspReferenceText = { bg = colors.selection_inactive },
  LspReferenceRead = { bg = colors.selection_inactive },
  LspReferenceWrite = { bg = colors.selection_inactive },
  LspCodeLens = { fg = colors.fg_tertiary },
  LspCodeLensSeparator = { fg = colors.fg_tertiary },
  LspSignatureActiveParameter = { bg = colors.selection },

  -- Diagnostic highlights
  DiagnosticError = { fg = colors.error },
  DiagnosticWarn = { fg = colors.warning },
  DiagnosticInfo = { fg = colors.info },
  DiagnosticHint = { fg = colors.hint },
  DiagnosticVirtualTextError = { fg = colors.error },
  DiagnosticVirtualTextWarn = { fg = colors.warning },
  DiagnosticVirtualTextInfo = { fg = colors.info },
  DiagnosticVirtualTextHint = { fg = colors.hint },
  DiagnosticUnderlineError = { undercurl = true, sp = colors.error },
  DiagnosticUnderlineWarn = { undercurl = true, sp = colors.warning },
  DiagnosticUnderlineInfo = { undercurl = true, sp = colors.info },
  DiagnosticUnderlineHint = { undercurl = true, sp = colors.hint },

  -- TreeSitter highlights
  ['@annotation'] = { link = 'PreProc' },
  ['@attribute'] = { link = 'PreProc' },
  ['@boolean'] = { link = 'Boolean' },
  ['@character'] = { link = 'Character' },
  ['@character.special'] = { link = 'SpecialChar' },
  ['@comment'] = { link = 'Comment' },
  ['@conditional'] = { link = 'Conditional' },
  ['@constant'] = { link = 'Constant' },
  ['@constant.builtin'] = { link = 'Special' },
  ['@constant.macro'] = { link = 'Define' },
  ['@constructor'] = { fg = colors.blue },
  ['@debug'] = { link = 'Debug' },
  ['@define'] = { link = 'Define' },
  ['@error'] = { link = 'Error' },
  ['@exception'] = { link = 'Exception' },
  ['@field'] = { fg = colors.fg },
  ['@float'] = { link = 'Float' },
  ['@function'] = { link = 'Function' },
  ['@function.builtin'] = { link = 'Special' },
  ['@function.call'] = { link = 'Function' },
  ['@function.macro'] = { link = 'Macro' },
  ['@include'] = { link = 'Include' },
  ['@keyword'] = { link = 'Keyword' },
  ['@keyword.function'] = { link = 'Keyword' },
  ['@keyword.operator'] = { link = 'Keyword' },
  ['@keyword.return'] = { link = 'Keyword' },
  ['@label'] = { link = 'Label' },
  ['@method'] = { link = 'Function' },
  ['@method.call'] = { link = 'Function' },
  ['@namespace'] = { fg = colors.fg },
  ['@none'] = { fg = colors.fg },
  ['@number'] = { link = 'Number' },
  ['@operator'] = { link = 'Operator' },
  ['@parameter'] = { fg = colors.fg },
  ['@parameter.reference'] = { fg = colors.fg },
  ['@preproc'] = { link = 'PreProc' },
  ['@property'] = { fg = colors.fg },
  ['@punctuation.bracket'] = { fg = colors.fg_secondary },
  ['@punctuation.delimiter'] = { link = 'Delimiter' },
  ['@punctuation.special'] = { link = 'Delimiter' },
  ['@repeat'] = { link = 'Repeat' },
  ['@storageclass'] = { link = 'StorageClass' },
  ['@string'] = { link = 'String' },
  ['@string.escape'] = { link = 'SpecialChar' },
  ['@string.regex'] = { link = 'String' },
  ['@string.special'] = { link = 'SpecialChar' },
  ['@symbol'] = { fg = colors.fg },
  ['@tag'] = { link = 'Tag' },
  ['@tag.attribute'] = { fg = colors.fg },
  ['@tag.delimiter'] = { link = 'Delimiter' },
  ['@text'] = { fg = colors.fg },
  ['@text.danger'] = { fg = colors.error },
  ['@text.emphasis'] = { italic = true },
  ['@text.literal'] = { link = 'String' },
  ['@text.note'] = { fg = colors.info },
  ['@text.reference'] = { underline = true },
  ['@text.strike'] = { strikethrough = true },
  ['@text.strong'] = { bold = true },
  ['@text.title'] = { link = 'Title' },
  ['@text.todo'] = { link = 'Todo' },
  ['@text.underline'] = { underline = true },
  ['@text.uri'] = { underline = true },
  ['@text.warning'] = { fg = colors.warning },
  ['@todo'] = { link = 'Todo' },
  ['@type'] = { link = 'Type' },
  ['@type.builtin'] = { link = 'Type' },
  ['@type.definition'] = { link = 'Typedef' },
  ['@type.qualifier'] = { link = 'Type' },
  ['@variable'] = { fg = colors.fg },
  ['@variable.builtin'] = { link = 'Special' },

  -- Git signs
  GitSignsAdd = { fg = colors.git_add },
  GitSignsChange = { fg = colors.git_change },
  GitSignsDelete = { fg = colors.git_delete },
  GitSignsAddNr = { fg = colors.git_add },
  GitSignsChangeNr = { fg = colors.git_change },
  GitSignsDeleteNr = { fg = colors.git_delete },
  GitSignsAddLn = { bg = '#e6ffed' },
  GitSignsChangeLn = { bg = '#fff5b1' },
  GitSignsDeleteLn = { bg = '#ffeef0' },

  -- Telescope
  TelescopeNormal = { fg = colors.fg, bg = colors.bg },
  TelescopeBorder = { fg = colors.border },
  TelescopePromptBorder = { fg = colors.border },
  TelescopeResultsBorder = { fg = colors.border },
  TelescopePreviewBorder = { fg = colors.border },
  TelescopeSelection = { bg = colors.selection },
  TelescopeSelectionCaret = { fg = colors.blue },
  TelescopeMultiSelection = { bg = colors.selection_inactive },
  TelescopeMatching = { fg = colors.blue, bold = true },

  -- NvimTree
  NvimTreeNormal = { fg = colors.fg, bg = colors.bg },
  NvimTreeRootFolder = { fg = colors.blue, bold = true },
  NvimTreeFolderIcon = { fg = colors.blue },
  NvimTreeFolderName = { fg = colors.fg },
  NvimTreeOpenedFolderName = { fg = colors.blue },
  NvimTreeEmptyFolderName = { fg = colors.fg_tertiary },
  NvimTreeFileDirty = { fg = colors.git_change },
  NvimTreeGitDirty = { fg = colors.git_change },
  NvimTreeGitNew = { fg = colors.git_add },
  NvimTreeGitDeleted = { fg = colors.git_delete },
  NvimTreeSpecialFile = { fg = colors.magenta },
  NvimTreeIndentMarker = { fg = colors.border },
  NvimTreeImageFile = { fg = colors.purple },
  NvimTreeSymlink = { fg = colors.cyan },
  NvimTreeExecFile = { fg = colors.green },
}

-- Apply highlights
for group, opts in pairs(highlights) do
  vim.api.nvim_set_hl(0, group, opts)
end

return M
